syntax = "proto3";

package practics;

option go_package = "/api";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

service PurchaseApiService {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
    option (google.api.http) = {
      post: "/v1/users"
      body: "*"
    };};

  rpc CreateItem(CreateItemRequest) returns (CreateItemResponse) {
    option (google.api.http) = {
        post: "/v1/items"
        body: "*"
    };
  };

  rpc CreatePurchase(CreatePurchaseRequest) returns (CreatePurchaseResponse) {
    option (google.api.http) = {
      post: "/v1/purchase"
      body: "*"
    };
  };

  rpc UpdateUser(UpdateUserRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/v1/users/{id}"
      body: "*"
    };
  };

  rpc DeletePurchase(DeletePurchaseRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/purchase/{id}"
    };
  };

  rpc GetPurchases(GetPurchasesRequest) returns (GetPurchasesResponse) {
    option (google.api.http) = {
      get: "/v1/purchase"
    };
  };
}

message CreateUserRequest {
  string login = 1;
  string password = 2;
  string lastname = 3;
  string firstname = 4;
}

message CreateUserResponse {
  int64 id = 1;
  string login = 2;
  string password = 3;
  string lastname = 4;
  string firstname = 5;
}

message CreateItemRequest {
  string title = 1;
  string description =2;
  int64 cost = 3;
}

message CreateItemResponse {
  int64 id = 1;
  string title = 2;
  string description =3;
  int64 cost = 4;
}

message CreatePurchaseRequest {
  int64 user_id = 1;
  int64 item_id = 2;
}

message CreatePurchaseResponse {
  int64 id = 1;
  int64 user_id = 2;
  int64 item_id = 3;
  google.protobuf.Timestamp purchase_time = 4;
}

message UpdateUserRequest {
  int64 id = 1;
  string login = 2;
  string password = 3;
  string lastname = 4;
  string firstname = 5;
}

message DeletePurchaseRequest {
  int64 id = 1;
}

message GetPurchasesRequest {
  int64 user_id = 1;
  int64 item_id = 2;
}

message GetPurchasesResponse {
  repeated CreatePurchaseResponse purchases = 1;
}